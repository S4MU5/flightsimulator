<?php

namespace app\models;

use Yii;
use yii\base\Model;
use yii\web\BadRequestHttpException;

/**
 * This is the model class for table "bookings".
 *
 * @property int $id
 * @property int $bort_id
 * @property int $user_id
 * @property int $status
 * @property string $start_date
 * @property string $end_date
 * @property string|null $comments
 * @property string $purpose
 *
 * @property Borts $bort
 * @property Users $user
 */
class BookingSaveForm extends Model
{

    public $id;
    public $bort_id;
    public $user_id;
    public $start_date_first;
    public $start_date;
    public $end_date;
    public $purpose;
    public $status;
    public $comments;

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['bort_id', 'user_id', 'status', 'start_date', 'end_date', 'purpose'], 'required'],
            [['bort_id', 'user_id', 'status'], 'integer'],
            [['start_date', 'end_date', 'start_date_first'], 'safe'],
            [['comments', 'purpose'], 'string', 'max' => 255],
            ['end_date', function ($attribute, $params){
            if ($this->$attribute < $this->start_date_first.' '.$this->start_date.':00'){
                $this->addError($attribute, 'Дата прилета идет раньше даты вылета');
            } else {
                $searchModel = new BookingSearch();
                $dataProvider = $searchModel->searchParams($this->bort_id, $this->start_date_first.' '.$this->start_date.':00', $this->$attribute);
                if ($dataProvider->totalCount > 0){
                    $this->addError($attribute, 'На такое время уже есть записи');
                }
            }
            }],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'bort_id' => 'Bort ID',
            'user_id' => 'User ID',
            'status' => 'Status',
            'start_date' => 'Start Date',
            'end_date' => 'End Date',
            'comments' => 'Comments',
            'purpose' => 'Purpose',
        ];
    }

    public function formName()
    {
        return 'bookingsaveform'; // TODO: Change the autogenerated stub
    }

    public function save() {
        $booking = new Bookings();
        $booking->setAttributes([
            'bort_id' => $this->bort_id,
            'user_id' => $this->user_id,
            'status' => $this->status,
            'start_date' => $this->start_date_first.' '.$this->start_date.':00',
            'end_date' => $this->end_date,
            'purpose' => $this->purpose
        ]);

        if (!$booking->save()){
            throw new BadRequestHttpException("Ошибка сохранения элемента");
        }
    }
}
